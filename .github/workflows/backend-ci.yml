name: Backend CI

on:
  push:
    branches:
      - main
    paths:
      - 'src/backend/**'
  pull_request:
    branches:
      - main
    paths:
      - 'src/backend/**'

env:
  NODE_VERSION: '20.x'
  PNPM_VERSION: '8.x'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ hashFiles('src/backend/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-

      - name: Install dependencies
        working-directory: src/backend
        run: pnpm install --frozen-lockfile

      - name: Run linting
        working-directory: src/backend
        run: pnpm lint
        
      - name: Type check
        working-directory: src/backend
        run: pnpm tsc --noEmit

      - name: Run tests with coverage
        working-directory: src/backend
        run: pnpm test:coverage
        env:
          CI: true

      - name: Build application
        working-directory: src/backend
        run: pnpm build
        env:
          CI: true

      - name: Check test coverage threshold
        working-directory: src/backend
        run: |
          COVERAGE=$(cat coverage/coverage-summary.json | jq -r '.total.lines.pct')
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "Test coverage ($COVERAGE%) is below the required threshold (80%)"
            exit 1
          fi