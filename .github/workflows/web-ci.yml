name: Web CI

on:
  push:
    branches:
      - main
    paths:
      - 'src/web/**'
  pull_request:
    branches:
      - main
    paths:
      - 'src/web/**'

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/web

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '8.x'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
          cache-dependency-path: 'src/web/pnpm-lock.yaml'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Type check
        run: pnpm type-check
        
      - name: Lint
        run: pnpm lint
        
      - name: Run tests
        run: pnpm test
        env:
          CI: true
          
      - name: Build application
        run: pnpm build
        env:
          CI: true
          NODE_ENV: production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: src/web/.next
          retention-days: 7
          if-no-files-found: error

      - name: Cache Next.js build
        uses: actions/cache@v3
        with:
          path: |
            src/web/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('src/web/pnpm-lock.yaml') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('src/web/pnpm-lock.yaml') }}-
            ${{ runner.os }}-nextjs-

  notify:
    name: Notify status
    needs: build
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Check build status
        if: needs.build.result != 'success'
        run: exit 1