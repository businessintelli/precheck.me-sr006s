apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: precheck
  labels:
    app: precheck
    component: backend
    environment: production
    tier: backend
    managed-by: kubernetes
  annotations:
    # Prometheus monitoring configuration
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/metrics"
    prometheus.io/scheme: "http"
    # AWS Load Balancer configurations
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-timeout: "60"

spec:
  type: ClusterIP
  ports:
    # Main application HTTP port
    - port: 80
      targetPort: 3000
      protocol: TCP
      name: http
    # Prometheus metrics port
    - port: 3000
      targetPort: 3000
      protocol: TCP
      name: metrics
    # Health check endpoint port
    - port: 3001
      targetPort: 3001
      protocol: TCP
      name: health
  
  # Pod selector labels for service discovery
  selector:
    app: precheck
    component: backend
    environment: production
  
  # Session handling configuration
  sessionAffinity: None
  
  # Pod readiness configuration
  publishNotReadyAddresses: false
  
  # Traffic routing policy
  externalTrafficPolicy: Local