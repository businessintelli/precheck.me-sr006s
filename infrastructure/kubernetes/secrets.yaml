apiVersion: v1
kind: Secret
metadata:
  name: precheck-secrets
  namespace: precheck
  labels:
    app: precheck
    environment: production
    managed-by: terraform
    security-tier: critical
  annotations:
    rotation-schedule: "30d"
    last-rotated: "2024-02-05T00:00:00Z"  # Updated during rotation
    encryption: "aes256-gcm"
    kubectl.kubernetes.io/last-applied-configuration: ''  # Managed by kubectl
type: Opaque
data:
  # Database Credentials - 30 day rotation
  DB_PASSWORD: ${BASE64_ENCODED_DB_PASSWORD}  # Must be base64 encoded
  REDIS_PASSWORD: ${BASE64_ENCODED_REDIS_PASSWORD}  # Must be base64 encoded

  # Authentication Secrets - 90 day rotation
  JWT_SECRET: ${BASE64_ENCODED_JWT_SECRET}  # Must be base64 encoded
  JWT_PRIVATE_KEY: ${BASE64_ENCODED_JWT_PRIVATE_KEY}  # 4096-bit RSA key in PEM format
  JWT_PUBLIC_KEY: ${BASE64_ENCODED_JWT_PUBLIC_KEY}  # 4096-bit RSA key in PEM format
  MFA_SECRET_KEY: ${BASE64_ENCODED_MFA_SECRET}  # 32 char base32 encoded

  # External Service Credentials - 60 day rotation
  AWS_ACCESS_KEY_ID: ${BASE64_ENCODED_AWS_ACCESS_KEY_ID}  # 20 char alphanumeric
  AWS_SECRET_ACCESS_KEY: ${BASE64_ENCODED_AWS_SECRET_KEY}  # 40 char base64
  OPENAI_API_KEY: ${BASE64_ENCODED_OPENAI_KEY}  # Min 32 char base64
  STRIPE_SECRET_KEY: ${BASE64_ENCODED_STRIPE_KEY}  # Min 32 char base64
  SENDGRID_API_KEY: ${BASE64_ENCODED_SENDGRID_KEY}  # Min 32 char base64

  # Encryption Keys - 180 day rotation
  ENCRYPTION_KEY: ${BASE64_ENCODED_ENCRYPTION_KEY}  # 256-bit AES key

stringData: {}  # No plain-text values allowed

---
# RBAC Policy for Secret Access
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-reader
  namespace: precheck
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["precheck-secrets"]
  verbs: ["get"]

---
# Service Account Binding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secret-reader-binding
  namespace: precheck
subjects:
- kind: ServiceAccount
  name: precheck-service
  namespace: precheck
roleRef:
  kind: Role
  name: secret-reader
  apiGroup: rbac.authorization.k8s.io